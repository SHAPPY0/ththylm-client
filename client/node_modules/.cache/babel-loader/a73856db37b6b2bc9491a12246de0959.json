{"ast":null,"code":"import axios from 'axios';\nimport { BASEURL } from '../config/routes';\nimport { CONFIGS } from '../config';\nlet instance = axios.create({\n  baseURL: BASEURL\n});\ninstance.interceptors.request.use(config => {\n  config.headers = {\n    'Authorization': 'Bearer ' + localStorage.getItem(\"_uToken\")\n  };\n  return config;\n}, error => {\n  return console.log('Error in req interceptor:', error);\n});\ninstance.interceptors.response.use(res => {\n  return res;\n}, err => {\n  console.log(\"Got error\", err.response);\n\n  if (err && err.response) {\n    if (err.status === 401) {\n      console.log(\"pppp\");\n    }\n  }\n});\nexport const Axios_Instance = instance;\nexport const Axios = axios;","map":{"version":3,"sources":["/home/saurabh/workspace/go/mmm-client/src/utils/axiosInterceptor.js"],"names":["axios","BASEURL","CONFIGS","instance","create","baseURL","interceptors","request","use","config","headers","localStorage","getItem","error","console","log","response","res","err","status","Axios_Instance","Axios"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAAQC,OAAR,QAAuB,WAAvB;AAEA,IAAIC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAEJ;AADe,CAAb,CAAf;AAIEE,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,MAAD,IAAY;AAC5CA,EAAAA,MAAM,CAACC,OAAP,GAAiB;AAAG,qBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,SAArB;AAAhC,GAAjB;AACA,SAAOH,MAAP;AACD,CAHD,EAGGI,KAAK,IAAI;AACV,SAAOC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCF,KAAxC,CAAP;AACD,CALD;AAOAV,QAAQ,CAACG,YAAT,CAAsBU,QAAtB,CAA+BR,GAA/B,CAAoCS,GAAD,IAAS;AAC1C,SAAOA,GAAP;AACD,CAFD,EAEIC,GAAD,IAAO;AAERJ,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBG,GAAG,CAACF,QAA7B;;AACA,MAAGE,GAAG,IAAIA,GAAG,CAACF,QAAd,EAAuB;AACrB,QAAGE,GAAG,CAACC,MAAJ,KAAe,GAAlB,EAAsB;AACpBL,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACF;AACF,CAVD;AAYA,OAAO,MAAMK,cAAc,GAAGjB,QAAvB;AACP,OAAO,MAAMkB,KAAK,GAAGrB,KAAd","sourcesContent":["import axios from 'axios';\nimport { BASEURL } from '../config/routes';\nimport {CONFIGS} from  '../config';\n\nlet instance = axios.create({\n    baseURL: BASEURL\n  });\n\n  instance.interceptors.request.use((config) => {\n    config.headers = {  'Authorization': 'Bearer ' + localStorage.getItem(\"_uToken\")};\n    return config\n  }, error => {\n    return console.log('Error in req interceptor:',error);\n  })\n\n  instance.interceptors.response.use((res) => {\n    return res;\n  }, (err)=>{\n    \n    console.log(\"Got error\", err.response);\n    if(err && err.response){\n      if(err.status === 401){\n        console.log(\"pppp\")\n      }\n    }\n  })\n\n  export const Axios_Instance = instance;\n  export const Axios = axios;"]},"metadata":{},"sourceType":"module"}