{"ast":null,"code":"var _jsxFileName = \"/home/saurabh/workspace/rent-hawk-client/src/components/appContainer.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport Notification from './subComponents/notification';\nimport { connect } from 'react-redux';\nimport { ACTION_TYPES } from '../utils/actions';\n\nclass AppContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  componentDidMount() {}\n\n  render() {\n    if (this.props.notification.show) {\n      setTimeout(() => {\n        this.props.toggleNotification({\n          show: false,\n          data: {}\n        });\n      }, 5000);\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, this.props.children, this.props.notification.show && /*#__PURE__*/React.createElement(Notification, Object.assign({}, this.props.notification, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 44\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    'notification': state.notification\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    'toggleNotification': data => dispatch({\n      'type': ACTION_TYPES.notification,\n      ...data\n    })\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(AppContainer));","map":{"version":3,"sources":["/home/saurabh/workspace/rent-hawk-client/src/components/appContainer.js"],"names":["React","Component","withRouter","Notification","connect","ACTION_TYPES","AppContainer","constructor","props","state","componentDidMount","render","notification","show","setTimeout","toggleNotification","data","children","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,kBAA7B;;AAGA,MAAMC,YAAN,SAA2BL,SAA3B,CAAqC;AAEnCM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG,CACnB;;AAEDC,EAAAA,MAAM,GAAG;AACP,QAAG,KAAKH,KAAL,CAAWI,YAAX,CAAwBC,IAA3B,EAAgC;AAC9BC,MAAAA,UAAU,CAAC,MAAI;AACb,aAAKN,KAAL,CAAWO,kBAAX,CAA8B;AAACF,UAAAA,IAAI,EAAC,KAAN;AAAYG,UAAAA,IAAI,EAAC;AAAjB,SAA9B;AACD,OAFS,EAER,IAFQ,CAAV;AAGD;;AACD,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKR,KAAL,CAAWS,QADhB,EAEK,KAAKT,KAAL,CAAWI,YAAX,CAAwBC,IAAxB,iBAAgC,oBAAC,YAAD,oBAAkB,KAAKL,KAAL,CAAWI,YAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAFrC,CADF;AAMD;;AAvBkC;;AA0BrC,MAAMM,eAAe,GAAIT,KAAD,IAAS;AAC7B,SAAM;AACJ,oBAAeA,KAAK,CAACG;AADjB,GAAN;AAGD,CAJH;;AAKE,MAAMO,kBAAkB,GAAIC,QAAD,IAAY;AACrC,SAAM;AACJ,0BAAsBJ,IAAD,IAAQI,QAAQ,CAAC;AAAC,cAAOf,YAAY,CAACO,YAArB;AAAkC,SAAGI;AAArC,KAAD;AADjC,GAAN;AAGD,CAJD;;AAKF,eAAeZ,OAAO,CAACc,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CjB,UAAU,CAACI,YAAD,CAAtD,CAAf","sourcesContent":["import React, { Component } from 'react'; \nimport { withRouter } from 'react-router-dom';\nimport Notification from './subComponents/notification';\nimport { connect } from 'react-redux';\nimport { ACTION_TYPES } from '../utils/actions';\n\n\nclass AppContainer extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n    }\n  \n  }\n  componentDidMount() { \n  } \n\n  render() {\n    if(this.props.notification.show){\n      setTimeout(()=>{\n        this.props.toggleNotification({show:false,data:{}});\n      },5000);\n    }\n    return (\n      <div>\n          {this.props.children}\n          {this.props.notification.show && <Notification {...this.props.notification} />}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state)=>{\n    return{\n      'notification':state.notification\n    }\n  };\n  const mapDispatchToProps = (dispatch)=>{\n    return{\n      'toggleNotification':(data)=>dispatch({'type':ACTION_TYPES.notification,...data})\n    }\n  }\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(AppContainer));"]},"metadata":{},"sourceType":"module"}