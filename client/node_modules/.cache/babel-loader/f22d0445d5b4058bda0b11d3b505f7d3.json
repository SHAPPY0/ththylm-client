{"ast":null,"code":"import axios from 'axios';\nimport { BASEURL } from '../config/routes';\nimport { CONFIGS } from '../config';\nimport { Notification } from './index';\nlet instance = axios.create({\n  baseURL: BASEURL\n});\ninstance.interceptors.request.use(req => {\n  req.headers = {\n    'Authorization': 'Bearer ' + localStorage.getItem(\"_uToken\")\n  };\n  return req;\n}, error => {\n  return console.log('Error in req interceptor:', error);\n});\ninstance.interceptors.response.use(res => {\n  return res;\n}, err => {\n  if (err && err.response) {\n    if (err.response.status == 401) {\n      Notification({\n        show: true,\n        data: {\n          success: false,\n          msg: err ? err.response ? \"Session expired, Please login again\" : \"Please login again\" : \"Session expired, Please login again!\"\n        }\n      }); // this.props.history.push('/');\n    } else {\n      return err;\n    }\n  }\n});\nexport const Axios_Instance = instance;\nexport const Axios = axios;","map":{"version":3,"sources":["/home/saurabh/workspace/go/bocadee-client/src/utils/axiosInterceptor.js"],"names":["axios","BASEURL","CONFIGS","Notification","instance","create","baseURL","interceptors","request","use","req","headers","localStorage","getItem","error","console","log","response","res","err","status","show","data","success","msg","Axios_Instance","Axios"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAAQC,OAAR,QAAuB,WAAvB;AACA,SAAQC,YAAR,QAA2B,SAA3B;AAEA,IAAIC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAEL;AADe,CAAb,CAAf;AAIEG,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,GAAD,IAAS;AACzCA,EAAAA,GAAG,CAACC,OAAJ,GAAc;AAAG,qBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,SAArB;AAAhC,GAAd;AACA,SAAOH,GAAP;AACD,CAHD,EAGGI,KAAK,IAAI;AACV,SAAOC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCF,KAAxC,CAAP;AACD,CALD;AAOAV,QAAQ,CAACG,YAAT,CAAsBU,QAAtB,CAA+BR,GAA/B,CAAoCS,GAAD,IAAS;AAC1C,SAAOA,GAAP;AACD,CAFD,EAEIC,GAAD,IAAO;AACR,MAAGA,GAAG,IAAIA,GAAG,CAACF,QAAd,EAAuB;AACrB,QAAGE,GAAG,CAACF,QAAJ,CAAaG,MAAb,IAAuB,GAA1B,EAA8B;AAC5BjB,MAAAA,YAAY,CAAC;AACXkB,QAAAA,IAAI,EAAC,IADM;AAEXC,QAAAA,IAAI,EAAC;AAACC,UAAAA,OAAO,EAAC,KAAT;AAAgBC,UAAAA,GAAG,EAACL,GAAG,GAAIA,GAAG,CAACF,QAAJ,GAAe,qCAAf,GAAuD,oBAA3D,GAAkF;AAAzG;AAFM,OAAD,CAAZ,CAD4B,CAK5B;AACD,KAND,MAMK;AACH,aAAOE,GAAP;AACD;AACF;AACF,CAdD;AAgBA,OAAO,MAAMM,cAAc,GAAGrB,QAAvB;AACP,OAAO,MAAMsB,KAAK,GAAG1B,KAAd","sourcesContent":["import axios from 'axios';\nimport { BASEURL } from '../config/routes';\nimport {CONFIGS} from  '../config';\nimport {Notification} from './index';\n\nlet instance = axios.create({\n    baseURL: BASEURL\n  });\n\n  instance.interceptors.request.use((req) => {\n    req.headers = {  'Authorization': 'Bearer ' + localStorage.getItem(\"_uToken\")};\n    return req\n  }, error => {\n    return console.log('Error in req interceptor:',error);\n  });\n\n  instance.interceptors.response.use((res) => {\n    return res;\n  }, (err)=>{\n    if(err && err.response){\n      if(err.response.status == 401){\n        Notification({\n          show:true,\n          data:{success:false, msg:err ? (err.response ? \"Session expired, Please login again\" : \"Please login again\"): \"Session expired, Please login again!\"}\n        });\n        // this.props.history.push('/');\n      }else{\n        return err;\n      }\n    }\n  });\n\n  export const Axios_Instance = instance;\n  export const Axios = axios;"]},"metadata":{},"sourceType":"module"}