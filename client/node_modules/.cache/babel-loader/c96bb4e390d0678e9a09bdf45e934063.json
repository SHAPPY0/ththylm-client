{"ast":null,"code":"import Store from '../store';\nimport { ACTION_TYPES } from './actions';\nimport { CONFIGS } from \"../config\";\nimport decode from 'jwt-decode';\nexport const Notification = data => {\n  Store.dispatch({\n    type: ACTION_TYPES.TOGGLE_NOTIFICATION,\n    ...data\n  });\n};\nexport const checkAuthorization = props => {\n  let isAuth = false;\n  let token = localStorage.getItem(CONFIGS.uLocal);\n  if (token && token.length > 100) isAuth = true;\n  if (!isAuth) props.history.push('/');\n};\nexport const getUserDetails = () => {\n  let token = localStorage.getItem(CONFIGS.uLocal);\n  let userDetails = {};\n\n  if (token && token.length > 100) {\n    userDetails = decode(token);\n  }\n\n  ;\n  return userDetails;\n};","map":{"version":3,"sources":["/home/saurabh/workspace/go/mmm-client/src/utils/index.js"],"names":["Store","ACTION_TYPES","CONFIGS","decode","Notification","data","dispatch","type","TOGGLE_NOTIFICATION","checkAuthorization","props","isAuth","token","localStorage","getItem","uLocal","length","history","push","getUserDetails","userDetails"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,SAASC,OAAT,QAAwB,WAAxB;AACA,OAAOC,MAAP,MAAmB,YAAnB;AAEA,OAAO,MAAMC,YAAY,GAAIC,IAAD,IAAQ;AAChCL,EAAAA,KAAK,CAACM,QAAN,CAAe;AAAEC,IAAAA,IAAI,EAACN,YAAY,CAACO,mBAApB;AAAyC,OAAGH;AAA5C,GAAf;AACH,CAFM;AAIP,OAAO,MAAMI,kBAAkB,GAAIC,KAAD,IAAS;AACvC,MAAIC,MAAM,GAAG,KAAb;AACA,MAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBZ,OAAO,CAACa,MAA7B,CAAZ;AACA,MAAGH,KAAK,IAAIA,KAAK,CAACI,MAAN,GAAe,GAA3B,EAAgCL,MAAM,GAAG,IAAT;AAChC,MAAG,CAACA,MAAJ,EAAYD,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmB,GAAnB;AACf,CALM;AAOP,OAAO,MAAMC,cAAc,GAAG,MAAI;AAC9B,MAAIP,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqBZ,OAAO,CAACa,MAA7B,CAAZ;AACA,MAAIK,WAAW,GAAG,EAAlB;;AACA,MAAGR,KAAK,IAAIA,KAAK,CAACI,MAAN,GAAe,GAA3B,EAA+B;AAC3BI,IAAAA,WAAW,GAAGjB,MAAM,CAACS,KAAD,CAApB;AACH;;AAAA;AACD,SAAOQ,WAAP;AACH,CAPM","sourcesContent":["import Store from '../store';\nimport { ACTION_TYPES } from './actions';\nimport { CONFIGS } from \"../config\";\nimport decode from 'jwt-decode';\n\nexport const Notification = (data)=>{\n    Store.dispatch({ type:ACTION_TYPES.TOGGLE_NOTIFICATION, ...data});\n};\n\nexport const checkAuthorization = (props)=>{\n    let isAuth = false;\n    let token = localStorage.getItem(CONFIGS.uLocal);\n    if(token && token.length > 100) isAuth = true;\n    if(!isAuth) props.history.push('/');\n};\n\nexport const getUserDetails = ()=>{\n    let token = localStorage.getItem(CONFIGS.uLocal);\n    let userDetails = {};\n    if(token && token.length > 100){\n        userDetails = decode(token);\n    };\n    return userDetails;\n}"]},"metadata":{},"sourceType":"module"}