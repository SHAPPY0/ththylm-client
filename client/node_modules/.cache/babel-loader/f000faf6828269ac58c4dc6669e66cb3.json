{"ast":null,"code":"var _jsxFileName = \"/home/saurabh/workspace/go/bocadee-client/src/components/dashboard.js\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Axios_Instance } from '../utils/axiosInterceptor';\nimport { BASEURL, ROUTES } from '../config/routes';\nimport { checkAuthorization, getUserDetails, FormatDate, GetStatusByDateTime, Notification, DateDiffFormat } from '../utils';\n\nclass Dashboard extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {},\n      wishTitle: 'Good Morning',\n      feeds: {\n        \"today\": [],\n        \"upcoming\": [],\n        \"completed\": []\n      },\n      feed: \"\",\n      feed_posts: []\n    };\n  }\n\n  async componentDidMount() {\n    await checkAuthorization(this.props);\n    this.setWishTitle();\n    let details = getUserDetails();\n    this.setState({\n      user: details\n    });\n    this.fetchFeedPosts();\n    this.fetchFeeds();\n  }\n\n  setWishTitle() {\n    let {\n      wishTitle\n    } = this.state;\n    let currentDate = new Date();\n    let currentTime = currentDate.toString().split(' ')[4];\n    let timeSegments = currentTime.split(':');\n\n    if (timeSegments >= '12') {\n      wishTitle = 'Good After Noon';\n    }\n\n    if (timeSegments >= '17') {\n      wishTitle = 'Good Evening';\n    }\n\n    this.setState({\n      wishTitle\n    });\n  }\n\n  async fetchFeeds() {\n    try {\n      let _resp = await Axios_Instance.get(`${ROUTES.event_feeds}`);\n\n      if (!_resp) {\n        _resp = {\n          data: {\n            success: false,\n            msg: 'Unexpected error occured'\n          }\n        };\n        return;\n      }\n\n      if (_resp.data && _resp.data.success) {\n        let {\n          feeds\n        } = this.state;\n        let data = _resp.data.data.events;\n        let obj = {\n          \"today\": [],\n          \"upcoming\": []\n        };\n\n        for (let i = 0; i < data.length; i++) {\n          let s_dt = data[i].start_time;\n          let e_e_dt = data[i].expected_end_time;\n          let cur_date = new Date().setHours(0, 0, 0, 0);\n\n          if (new Date(s_dt).setHours(0, 0, 0, 0) <= cur_date && new Date(e_e_dt).setHours(0, 0, 0, 0) >= cur_date) {\n            let _status = GetStatusByDateTime(data[i].start_time, data[i].expected_end_time);\n\n            data[i].status = _status;\n            obj.today.push(data[i]);\n          } else {\n            obj.upcoming.push(data[i]);\n          }\n        }\n\n        feeds = obj;\n        this.setState({\n          feeds\n        });\n      }\n    } catch (ex) {\n      Notification({\n        show: true,\n        data: {\n          success: false,\n          msg: ex ? ex.response ? ex.response.data : ex : \"Exception ocurred\"\n        }\n      });\n    }\n  }\n\n  OnFeedFieldChange(e) {\n    let {\n      feed\n    } = this.state;\n    feed = e.target.value;\n    this.setState({\n      feed\n    });\n  }\n\n  async fetchFeedPosts() {\n    try {\n      let _resp = await Axios_Instance.get(`${ROUTES.fetch_feeds}`);\n\n      if (_resp && _resp.data && _resp.data.success) {\n        let {\n          feed_posts\n        } = this.state;\n        feed_posts = _resp.data.data.feeds;\n        this.setState({\n          feed_posts\n        });\n      }\n    } catch (ex) {\n      Notification({\n        show: true,\n        data: {\n          success: false,\n          msg: ex ? ex.response ? ex.response.data : ex : \"Exception ocurred\"\n        }\n      });\n    }\n  }\n\n  async PostFeed() {\n    let {\n      feed\n    } = this.state;\n\n    if (!feed) {\n      Notification({\n        show: true,\n        data: {\n          success: false,\n          msg: \"Nothing to post\"\n        }\n      });\n      return;\n    }\n\n    ;\n    let reqBody = {\n      \"feed\": feed,\n      \"channel_id\": localStorage.getItem(\"selItem\"),\n      \"type\": \"text\"\n    };\n\n    try {\n      let _resp = await Axios_Instance.post(`${ROUTES.post_feed}`, reqBody);\n\n      if (_resp && _resp.data && _resp.data.success) {\n        Notification({\n          show: true,\n          data: {\n            success: true,\n            msg: \"Post added successfully\"\n          }\n        });\n        this.fetchFeedPosts();\n      }\n    } catch (ex) {\n      Notification({\n        show: true,\n        data: {\n          success: false,\n          msg: ex ? ex.response ? ex.response.data : ex : \"Exception ocurred\"\n        }\n      });\n    }\n  }\n\n  redirectUrl(url) {\n    window.open(obj.url.String, \"_blank\");\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"main-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"page-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        'textTransform': 'capitalize'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, this.state.wishTitle, \"! \", this.state.user.first_name || 'Guest')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"theme-color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 61\n      }\n    }, \"Feeds\")), this.state.user.user_type === 1 && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"textarea\", {\n      rows: \"2\",\n      className: \"form-control\",\n      name: \"feed\",\n      placeholder: \"Write to share...\",\n      onChange: this.OnFeedFieldChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"float\": \"right\",\n        \"marginTop\": \"5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: this.PostFeed.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 41\n      }\n    }, \"POST\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"feedPosts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 33\n      }\n    }, this.state.feed_posts.map((obj, k) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card eachFeedPost\",\n      key: k,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"channelName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 45\n      }\n    }, obj.logo_url && /*#__PURE__*/React.createElement(\"img\", {\n      src: `${BASEURL}${obj.logo_url}`,\n      alt: obj.channel_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 66\n      }\n    }), !obj.logo_url && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"blankLogo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 67\n      }\n    }, obj.channel_name[0]), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 49\n      }\n    }, obj.channel_name)), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"clear\": \"both\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 49\n      }\n    }, obj.feed), /*#__PURE__*/React.createElement(\"small\", {\n      style: {\n        fontSize: \"10px\",\n        color: \"#9fa2a4\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 49\n      }\n    }, DateDiffFormat(obj.created_at) || '--')))), this.state.feed_posts.length === 0 && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"textAlign\": \"center\",\n        \"padding\": \"20px\",\n        \"color\": \"#b0acac\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 41\n      }\n    }, \"No New Feeds\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-6 col-sm-6 borderLeft\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h6\", {\n      className: \"theme-color\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 61\n      }\n    }, \"Events\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        \"color\": \"#838c90\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 72\n      }\n    }, \"Today\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 45\n      }\n    }, this.state.feeds.today.map((obj, k) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-6 col-md-6\",\n      key: k,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"LiveCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 61\n      }\n    }, obj.thumbnail && /*#__PURE__*/React.createElement(\"img\", {\n      src: `${BASEURL}${obj.thumbnail}`,\n      className: \"live_img\",\n      alt: obj.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 83\n      }\n    }), !obj.thumbnail && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"height\": \"150px\",\n        \"width\": \"100%\",\n        \"background\": \"#ccc\",\n        \"paddingTop\": \"25%\",\n        \"color\": \"#96999c\",\n        \"textAlign\": \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 84\n      }\n    }, \"No Thumbnail\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"live_title\",\n      title: obj.title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 65\n      }\n    }, obj.title.substring(0, 27) || '--', obj.title.length > 27 && /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 169\n      }\n    }, \"...\")), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        \"fontSize\": \"11px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 65\n      }\n    }, obj.channel_name || '--'), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        \"fontSize\": \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 96\n      }\n    }, FormatDate(obj.start_time) || '--'), \" - \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 148\n      }\n    }, FormatDate(obj.expected_end_time) || '--'), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 65\n      }\n    }, obj.status === 'Running' && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn\",\n      style: {\n        \"fontSize\": \"10px\"\n      },\n      onClick: this.redirectUrl(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 99\n      }\n    }, \"Join Now\"), obj.status === 'Upcoming' && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"StatusWidget\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 100\n      }\n    }, \"Not Started Yet\"), obj.status === 'Ended' && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"StatusWidget\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 97\n      }\n    }, \"End\")))))), this.state.feeds.today.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        \"textAlign\": \"center\",\n        \"padding\": \"20px\",\n        \"color\": \"#b0acac\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 53\n      }\n    }, \"No Events For Today\"))), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        \"color\": \"#838c90\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 72\n      }\n    }, \"Upcoming\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 45\n      }\n    }, this.state.feeds.upcoming.map((obj, k) => /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-sm-6 col-md-6\",\n      key: k,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"LiveCard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 61\n      }\n    }, obj.thumbnail && /*#__PURE__*/React.createElement(\"img\", {\n      src: `${BASEURL}${obj.thumbnail}`,\n      className: \"live_img\",\n      alt: obj.channel_name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 83\n      }\n    }), !obj.thumbnail && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"height\": \"150px\",\n        \"width\": \"100%\",\n        \"background\": \"#ccc\",\n        \"paddingTop\": \"25%\",\n        \"color\": \"#96999c\",\n        \"textAlign\": \"center\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 84\n      }\n    }, \"No Thumbnail\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"live_title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 65\n      }\n    }, obj.title || '--'), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        \"fontSize\": \"11px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 65\n      }\n    }, obj.channel_name || '--'), /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        \"fontSize\": \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 96\n      }\n    }, FormatDate(obj.start_time) || '--'), \" - \", /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 148\n      }\n    }, FormatDate(obj.expected_end_time) || '--'), \" \"))))), this.state.feeds.upcoming.length === 0 && /*#__PURE__*/React.createElement(\"p\", {\n      style: {\n        \"textAlign\": \"center\",\n        \"padding\": \"20px\",\n        \"color\": \"#b0acac\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 53\n      }\n    }, \"No Upcomig Events\")))))))));\n  }\n\n}\n\nexport default withRouter(Dashboard);","map":{"version":3,"sources":["/home/saurabh/workspace/go/bocadee-client/src/components/dashboard.js"],"names":["React","Component","withRouter","Axios_Instance","BASEURL","ROUTES","checkAuthorization","getUserDetails","FormatDate","GetStatusByDateTime","Notification","DateDiffFormat","Dashboard","constructor","state","user","wishTitle","feeds","feed","feed_posts","componentDidMount","props","setWishTitle","details","setState","fetchFeedPosts","fetchFeeds","currentDate","Date","currentTime","toString","split","timeSegments","_resp","get","event_feeds","data","success","msg","events","obj","i","length","s_dt","start_time","e_e_dt","expected_end_time","cur_date","setHours","_status","status","today","push","upcoming","ex","show","response","OnFeedFieldChange","e","target","value","fetch_feeds","PostFeed","reqBody","localStorage","getItem","post","post_feed","redirectUrl","url","window","open","String","render","first_name","user_type","bind","map","k","logo_url","channel_name","fontSize","color","created_at","thumbnail","title","substring"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'; \nimport { withRouter } from 'react-router-dom';\nimport { Axios_Instance} from '../utils/axiosInterceptor';\nimport { BASEURL, ROUTES} from '../config/routes';\nimport { checkAuthorization, getUserDetails, FormatDate, GetStatusByDateTime, Notification,DateDiffFormat } from '../utils';\n\nclass Dashboard extends Component {\n    constructor(){\n        super(); \n        this.state = {\n            user:{},\n            wishTitle : 'Good Morning',\n            feeds:{\"today\":[], \"upcoming\":[],\"completed\":[]},\n            feed:\"\",\n            feed_posts:[]\n        }\n    }\n\n    async componentDidMount(){\n        await checkAuthorization(this.props);\n        this.setWishTitle();\n        let details = getUserDetails();\n        this.setState({user:details});\n        this.fetchFeedPosts();\n        this.fetchFeeds();\n        \n    };\n\n    setWishTitle(){\n        let {wishTitle} = this.state;\n        let currentDate = new Date();\n        let currentTime = currentDate.toString().split(' ')[4]; \n        let timeSegments = currentTime.split(':');\n        if(timeSegments >= '12'){\n            wishTitle = 'Good After Noon';\n        }\n        if(timeSegments >= '17'){\n            wishTitle = 'Good Evening';\n        }\n        this.setState({wishTitle});\n    }; \n\n    async fetchFeeds(){\n        try{\n            let _resp = await Axios_Instance.get(`${ROUTES.event_feeds}`);\n            if(!_resp){\n                _resp = {data:{success:false, msg:'Unexpected error occured'} };\n                return;\n            }\n            if(_resp.data && _resp.data.success){\n                let { feeds } = this.state;\n                let data = _resp.data.data.events;\n                let obj = {\"today\":[], \"upcoming\":[]};\n                for(let i = 0; i < data.length; i++){\n                    let s_dt = data[i].start_time;\n                    let e_e_dt = data[i].expected_end_time;\n                    let cur_date = new Date().setHours(0,0,0,0);\n                    if(new Date(s_dt).setHours(0,0,0,0) <= cur_date && new Date(e_e_dt).setHours(0,0,0,0) >= cur_date){\n                        let _status = GetStatusByDateTime(data[i].start_time, data[i].expected_end_time);\n                        data[i].status = _status;\n                        obj.today.push(data[i])\n                    }else{\n                        obj.upcoming.push(data[i]);\n                    } \n                }\n                feeds = obj;\n                this.setState({ feeds });\n            }\n        }catch(ex){\n            Notification({\n                show:true,\n                data:{success:false, msg:ex ? (ex.response ?ex.response.data : ex) : \"Exception ocurred\"}});\n        } \n    }\n \n    OnFeedFieldChange(e){\n        let { feed } = this.state;\n        feed = e.target.value;\n        this.setState({ feed });\n    }\n\n    async fetchFeedPosts(){\n        try{\n            let _resp = await Axios_Instance.get(`${ROUTES.fetch_feeds}` );\n            \n            if(_resp && _resp.data && _resp.data.success){\n                let { feed_posts } = this.state;\n                feed_posts = _resp.data.data.feeds;\n                this.setState({feed_posts});\n            }\n        }catch(ex){\n            Notification({\n                show:true,\n                data:{success:false, msg:ex ? (ex.response ?ex.response.data : ex) : \"Exception ocurred\"}});\n        } \n    };\n    \n    async PostFeed(){\n        let { feed } = this.state;\n        if(!feed){\n            Notification({\n                show:true,\n                data:{success:false, msg:\"Nothing to post\"}});\n            return;\n        };\n        let reqBody  = {\n                \"feed\":feed, \n                \"channel_id\":localStorage.getItem(\"selItem\"), \n                \"type\":\"text\"\n            };\n        try{\n            let _resp = await Axios_Instance.post(`${ROUTES.post_feed}`,reqBody );\n            \n            if(_resp && _resp.data && _resp.data.success){\n                Notification({\n                    show:true,\n                    data:{success:true, msg:\"Post added successfully\"}});\n                this.fetchFeedPosts();\n                \n            }\n        }catch(ex){\n            Notification({\n                show:true,\n                data:{success:false, msg:ex ? (ex.response ?ex.response.data : ex) : \"Exception ocurred\"}});\n        }         \n    }\n\n    redirectUrl(url){\n        window.open(obj.url.String, \"_blank\")\n    }\n  render() {\n            return (\n                <div className=\"main-container\">\n                    <div className=\"container\">\n                        <h4 className=\"page-title\">\n                            <p style={{'textTransform':'capitalize'}}>{this.state.wishTitle}! {this.state.user.first_name || 'Guest'}</p>\n                        </h4> \n                        <div className=\"row\">\n                            <div className=\"col-md-6 col-sm-6\">\n                                <h6 className=\"theme-color\"><b>Feeds</b></h6>\n                                {this.state.user.user_type === 1 && <>\n                                    <textarea rows=\"2\" className=\"form-control\" name=\"feed\" placeholder=\"Write to share...\" onChange={this.OnFeedFieldChange.bind(this)}></textarea>\n                                    <div style={{\"float\":\"right\", \"marginTop\":\"5px\"}}>\n                                        <button className=\"btn btn-primary\" onClick={this.PostFeed.bind(this)}>POST</button>\n                                    </div>\n                                </>}\n\n                                <div className=\"feedPosts\">\n                                    {this.state.feed_posts.map((obj, k)=>\n                                        <div className=\"card eachFeedPost\" key={k}>\n                                            <div className=\"channelName\">\n                                                {obj.logo_url && <img src={`${BASEURL}${obj.logo_url}`} alt={obj.channel_name} />}\n                                                {!obj.logo_url && <div className=\"blankLogo\">{obj.channel_name[0]}</div>}\n                                                \n                                                <p>{obj.channel_name}</p>\n                                            </div>\n                                            <div style={{\"clear\":\"both\"}}>\n                                                <p>{obj.feed}</p>\n                                                <small style={{fontSize:\"10px\", color:\"#9fa2a4\"}}>{DateDiffFormat(obj.created_at) || '--'}</small>\n                                            </div>\n                                        </div>\n                                    )}\n                                    {this.state.feed_posts.length === 0 &&\n                                        <div style={{\"textAlign\":\"center\", \"padding\":\"20px\", \"color\":\"#b0acac\"}}>No New Feeds</div>\n                                    }\n                                </div>\n                            </div>\n                            <div className=\"col-md-6 col-sm-6 borderLeft\" >\n                                <h6 className=\"theme-color\"><b>Events</b></h6>\n                                <div>\n                                    <div className=\"\">\n                                        <p style={{\"color\":\"#838c90\"}}><b>Today</b></p>\n                                        <div>\n                                            <div className=\"row\">\n                                                {this.state.feeds.today.map((obj, k)=>\n                                                    <div className=\"col-sm-6 col-md-6\" key={k}>\n                                                        <div className=\"card\">\n                                                            <div className=\"LiveCard\">\n                                                                {obj.thumbnail && <img src={`${BASEURL}${obj.thumbnail}`} className=\"live_img\" alt={obj.title}/>}\n                                                                {!obj.thumbnail && <div style={{\"height\":\"150px\",\"width\":\"100%\", \"background\":\"#ccc\",\"paddingTop\":\"25%\", \"color\":\"#96999c\", \"textAlign\":\"center\"}}>No Thumbnail</div>}\n                                                                \n                                                                <p className=\"live_title\" title={obj.title}>{obj.title.substring(0,27) || '--'}{obj.title.length > 27 &&<span>...</span>}</p>\n                                                                <p style={{\"fontSize\":\"11px\"}}>{obj.channel_name || '--'}</p>\n                                                                <p style={{\"fontSize\":\"10px\"}}><span>{FormatDate(obj.start_time) || '--'}</span> - <span>{FormatDate(obj.expected_end_time) || '--'}</span> </p>\n                                                                <div> \n                                                                    {obj.status === 'Running' &&  <button className=\"btn\" style={{\"fontSize\":\"10px\"}} onClick={this.redirectUrl(this)}>Join Now</button>}\n                                                                    {obj.status === 'Upcoming' &&  <span className=\"StatusWidget\">Not Started Yet</span>}\n                                                                    {obj.status === 'Ended' &&  <span className=\"StatusWidget\">End</span>}\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                                {this.state.feeds.today.length === 0 &&\n                                                    <p style={{\"textAlign\":\"center\", \"padding\":\"20px\", \"color\":\"#b0acac\"}}>No Events For Today</p>\n                                                }\n                                                \n                                            </div>\n                                        </div>\n                                        <p style={{\"color\":\"#838c90\"}}><b>Upcoming</b></p>\n                                        <div>\n                                            <div className=\"row\">\n                                                {this.state.feeds.upcoming.map((obj, k)=>\n                                                    <div className=\"col-sm-6 col-md-6\" key={k}>\n                                                        <div className=\"card\">\n                                                            <div className=\"LiveCard\">\n                                                                {obj.thumbnail && <img src={`${BASEURL}${obj.thumbnail}`} className=\"live_img\" alt={obj.channel_name}/>}\n                                                                {!obj.thumbnail && <div style={{\"height\":\"150px\",\"width\":\"100%\", \"background\":\"#ccc\",\"paddingTop\":\"25%\", \"color\":\"#96999c\", \"textAlign\":\"center\"}}>No Thumbnail</div>}\n                                                                <p className=\"live_title\">{obj.title || '--'}</p>\n                                                                <p style={{\"fontSize\":\"11px\"}}>{obj.channel_name || '--'}</p>\n                                                                <p style={{\"fontSize\":\"10px\"}}><span>{FormatDate(obj.start_time) || '--'}</span> - <span>{FormatDate(obj.expected_end_time) || '--'}</span> </p>\n                                                                 \n                                                            </div>\n                                                        </div>\n                                                    </div>\n                                                )}\n                                                {this.state.feeds.upcoming.length === 0 &&\n                                                    <p style={{\"textAlign\":\"center\", \"padding\":\"20px\", \"color\":\"#b0acac\"}}>No Upcomig Events</p>\n                                                }\n                                            </div>\n                                        </div> \n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                \n                </div>\n            );\n    }\n  \n}\n\nexport default withRouter(Dashboard);"]},"metadata":{},"sourceType":"module"}