{"ast":null,"code":"import axios from 'axios';\nimport { BASEURL } from '../config/routes';\nimport { CONFIGS } from '../config';\nimport { Notification } from './index';\nlet instance = axios.create({\n  baseURL: BASEURL\n});\ninstance.interceptors.request.use(config => {\n  config.headers = {\n    'Authorization': 'Bearer ' + localStorage.getItem(\"_uToken\")\n  };\n  return config;\n}, error => {\n  return console.log('Error in req interceptor:', error);\n}); // instance.interceptors.response.use((res) => {\n//   return res;\n// }, (err)=>{\n//   if(err && err.response){\n//     if(err.response.status === 401){\n//       Notification({\n//         show:true,\n//         data:\"Token expired, Please login again!\"\n//       });\n//     }else{\n//       return err;\n//     }\n//   }\n// })\n\nexport const Axios_Instance = instance;\nexport const Axios = axios;","map":{"version":3,"sources":["/home/saurabh/workspace/go/mmm-client/src/utils/axiosInterceptor.js"],"names":["axios","BASEURL","CONFIGS","Notification","instance","create","baseURL","interceptors","request","use","config","headers","localStorage","getItem","error","console","log","Axios_Instance","Axios"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,SAAQC,OAAR,QAAuB,WAAvB;AACA,SAAQC,YAAR,QAA2B,SAA3B;AAEA,IAAIC,QAAQ,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACxBC,EAAAA,OAAO,EAAEL;AADe,CAAb,CAAf;AAIEG,QAAQ,CAACG,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,CAAmCC,MAAD,IAAY;AAC5CA,EAAAA,MAAM,CAACC,OAAP,GAAiB;AAAG,qBAAiB,YAAYC,YAAY,CAACC,OAAb,CAAqB,SAArB;AAAhC,GAAjB;AACA,SAAOH,MAAP;AACD,CAHD,EAGGI,KAAK,IAAI;AACV,SAAOC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAwCF,KAAxC,CAAP;AACD,CALD,E,CAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMG,cAAc,GAAGb,QAAvB;AACP,OAAO,MAAMc,KAAK,GAAGlB,KAAd","sourcesContent":["import axios from 'axios';\nimport { BASEURL } from '../config/routes';\nimport {CONFIGS} from  '../config';\nimport {Notification} from './index';\n\nlet instance = axios.create({\n    baseURL: BASEURL\n  });\n\n  instance.interceptors.request.use((config) => {\n    config.headers = {  'Authorization': 'Bearer ' + localStorage.getItem(\"_uToken\")};\n    return config\n  }, error => {\n    return console.log('Error in req interceptor:',error);\n  })\n\n  // instance.interceptors.response.use((res) => {\n  //   return res;\n  // }, (err)=>{\n  //   if(err && err.response){\n  //     if(err.response.status === 401){\n  //       Notification({\n  //         show:true,\n  //         data:\"Token expired, Please login again!\"\n  //       });\n  //     }else{\n  //       return err;\n  //     }\n  //   }\n  // })\n\n  export const Axios_Instance = instance;\n  export const Axios = axios;"]},"metadata":{},"sourceType":"module"}